/*
  ==============================================================================

    This file was auto-generated by the Jucer!

    It contains the basic startup code for a Juce application.

  ==============================================================================
*/

#ifndef __PLUGINEDITOR_H_4ACCBAA__
#define __PLUGINEDITOR_H_4ACCBAA__

#include "../JuceLibraryCode/JuceHeader.h"
#include "../JuceLibraryCode/JucePluginCharacteristics.h"
#include "PluginProcessor.h"
#include "WaveformControl.h"

class WaveformControl;

//==============================================================================
/** This is the editor component that our filter will display.
*/
class mlrVSTAudioProcessorEditor  : public AudioProcessorEditor,
                                            public SliderListener,
											public ButtonListener,
                                            public Timer
{
public:
    mlrVSTAudioProcessorEditor (mlrVSTAudioProcessor* ownerFilter);
    ~mlrVSTAudioProcessorEditor();

    //==============================================================================
    void timerCallback();
    void paint (Graphics& g);
    void sliderValueChanged (Slider*);
	void buttonClicked(Button*);

    //void mouseDown(const MouseEvent&);
    void recieveFileSelection(const int &waveformID, const int &fileID);

    Array<File> getLoadedFiles();

private:
    Label *infoLabel, *delayLabel, *helloLabel, *logoLabel;
    Slider *delaySlider;
	DrawableButton *loadButton;

	Array<File> loadedFiles;
	ListBox fileList;

	AudioFormatManager formatManager;

	Array<WaveformControl*> waveformArray;
	const int numChannels;
    static const int GUI_HEIGHT = 400;
    static const int GUI_WIDTH = 500;

    AudioPlayHead::CurrentPositionInfo lastDisplayedPosition;

    mlrVSTAudioProcessor* getProcessor() const { return static_cast <mlrVSTAudioProcessor*> (getAudioProcessor()); }

    void displayPositionInfo (const AudioPlayHead::CurrentPositionInfo& pos);
};


#endif  // __PLUGINEDITOR_H_4ACCBAA__
